{
	"info": {
		"_postman_id": "6e07c75d-0ed0-414a-87a0-df45bc2b920f",
		"name": "Question 1 (API Testing Using Postman)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37260188"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Create User (Positive)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"mor_2314\",\r\n    \"password\": \"83r5^_\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Negative)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": ahmed,\r\n    \"email\": \"ahmed@email.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users (Positive)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/users",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/userss",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"userss"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "login",
					"item": [
						{
							"name": "Login User (Positive)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"mor_2314\",\r\n    \"password\": \"83r5^_\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login User (Negative)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"mor_2314\",\r\n    \"password\": \"83r5^\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/login",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "Get All Products (Positive)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/products",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Products (Negative)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/productss",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"productss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Product not found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": []
						},
						"url": {
							"raw": "{{baseURL}}/products/:productID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								":productID"
							],
							"variable": [
								{
									"key": "productID",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Product not found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/products/:productID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"products",
								":productID"
							],
							"variable": [
								{
									"key": "productID",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "carts",
			"item": [
				{
					"name": "Create Cart (Positive)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 0,\r\n    \"userId\": 0,\r\n    \"products\": [\r\n        {\r\n            \"id\": 0,\r\n            \"title\": \"string\",\r\n            \"price\": 0.1,\r\n            \"description\": \"string\",\r\n            \"category\": \"string\",\r\n            \"image\": \"http://example.com\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/carts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Cart (Negative)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": abc,\r\n    \"userId\": 0,\r\n    \"products\": [\r\n        {\r\n            \"id\": 0,\r\n            \"title\": \"string\",\r\n            \"price\": 0.1,\r\n            \"description\": \"string\",\r\n            \"category\": \"string\",\r\n            \"image\": \"http://example.com\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/carts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Single Cart by ID (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cart should not be null\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.not.eql(null);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/carts/:cartID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts",
								":cartID"
							],
							"variable": [
								{
									"key": "cartID",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Single Cart by ID (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cart should not be null\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.not.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/carts/:cartID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts",
								":cartID"
							],
							"variable": [
								{
									"key": "cartID",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Cart (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cart should not be null\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.not.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/carts/:cartID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts",
								":cartID"
							],
							"variable": [
								{
									"key": "cartID",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Cart (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cart should not be null\", function () {\r",
									"    let response = pm.response.json();\r",
									"    pm.expect(response).to.not.eql(null);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/carts/:cartID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts",
								":cartID"
							],
							"variable": [
								{
									"key": "cartID",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Carts (Positive)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/carts",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Carts (Negative)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/cartss",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"cartss"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://fakestoreapi.com",
			"type": "string"
		}
	]
}